<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.board.dao.FreeBoardDAO">
	<sql id="searchFrag">
		FROM FREEBOARD  
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleSearch.startDate)">
				BO_DATE >= TO_DATE(#{simpleSearch.startDate}, 'YYYY-MM-DD')
			</if> 
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleSearch.endDate)">
				<![CDATA[ 
				AND BO_DATE <= TO_DATE(#{simpleSearch.endDate}, 'YYYY-MM-DD') + 1
				]]>
			</if>
			<if test="simpleSearch!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleSearch.searchWord)">
				AND
				<choose>
					<when test="simpleSearch.searchType eq 'title'">
						INSTR(BO_TITLE, #{simpleSearch.searchWord}) > 0
					</when>
					<when test="simpleSearch.searchType eq 'writer'">
						INSTR(BO_WRITER, #{simpleSearch.searchWord}) > 0
					</when> 
					<when test="simpleSearch.searchType eq 'content'">
						INSTR(BO_CONTENT, #{simpleSearch.searchWord}) > 0
					</when> 
					<otherwise>
						(
						INSTR(BO_TITLE, #{simpleSearch.searchWord}) > 0 
						OR INSTR(BO_WRITER, #{simpleSearch.searchWord}) > 0
						OR INSTR(BO_CONTENT, #{simpleSearch.searchWord}) > 0
						)
					</otherwise>
				</choose>
			</if>
		</trim>  
	</sql>
	
	<select id="selectTotalRecoard" resultType="int" parameterType="PagingVO">
		SELECT COUNT(*) 
		<include refid="searchFrag"/>
	</select> 
		  
	<select id="selectBoardList" resultType="FreeBoardVO" parameterType="PagingVO">
		SELECT B.* 
		FROM(
		    SELECT ROWNUM AS RNUM, A.* 
		    FROM(SELECT  
		        BO_NO,  
		        <![CDATA[  
		        LPAD('   re:', 6 * 4 * (LEVEL-1),'&nbsp;') || BO_TITLE AS BO_TITLE, 
		        ]]> 
		        BO_WRITER,   
		        TO_CHAR(BO_DATE, 'YYYY-MM-DD') BO_DATE, 
		        BO_HIT, BO_REC, BO_REP, BO_PARENT 
				<include refid="searchFrag"/>
				START WITH BO_PARENT IS NULL
				CONNECT BY PRIOR BO_NO = BO_PARENT
				ORDER SIBLINGS BY BO_NO DESC 
		        ) A 
		    ) B 
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<resultMap type="FreeBoardVO" id="boardMap" autoMapping="true">
		<id property="boNo" column="ORI_BONO"/> 
		<collection property="attatchList" javaType="java.util.List" ofType="AttatchVO" autoMapping="true">
			<id property="attNo" column="ATT_NO" />
		</collection>      
	</resultMap>  
	<select id="selectBoard" parameterType="int" resultMap="boardMap">
		SELECT 
		    A.BO_NO ORI_BONO, BO_PASS, BO_TITLE, 
		    BO_WRITER, BO_IP, BO_MAIL,
		    BO_CONTENT, BO_DATE,  
		    BO_REP, BO_HIT,  BO_REC,
		    BO_PARENT,ATT_NO, ATT_FILENAME , ATT_SAVENAME,
		    ATT_FANCYSIZE ,ATT_DOWNLOAD
		FROM
		    FREEBOARD A LEFT OUTER JOIN ATTATCH B ON (A.BO_NO = B.BO_NO)
		WHERE A.BO_NO = #{boNo}
	</select>
	
	<update id="incrementHit" parameterType="int">
		UPDATE FREEBOARD 
		SET BO_HIT = BO_HIT + 1
		WHERE BO_NO = #{boNo}
	</update>
	
	<update id="incrementRec" parameterType="int">
		UPDATE FREEBOARD 
		SET BO_REC = BO_REC + 1
		WHERE BO_NO = #{boNo}
	</update>
	  
	<update id="incrementRep" parameterType="int">
		UPDATE FREEBOARD 
		SET BO_REP = BO_REP + 1
		WHERE BO_NO = #{boNo}
	</update>
	
	<insert id="insertBoard" parameterType="FreeBoardVO">
		<selectKey resultType="int" keyProperty="boNo" order="BEFORE">
			SELECT FREEBOARD_SEQ.NEXTVAL FROM DUAL
		</selectKey>
			INSERT INTO FREEBOARD (
				BO_NO, BO_TITLE, BO_WRITER, 
				BO_IP, BO_MAIL, BO_PASS, 
				BO_CONTENT
			<if test="boParent!=null and boParent gt 0">	
				, BO_PARENT
			</if> 
			) 
			VALUES(
				#{boNo, jdbcType=NUMERIC },
				#{boTitle, jdbcType=VARCHAR },
				#{boWriter, jdbcType=VARCHAR },
				#{boIp, jdbcType=VARCHAR }, 
				#{boMail, jdbcType=VARCHAR },
				#{boPass, jdbcType=VARCHAR },
				#{boContent, jdbcType=CLOB }     
			<if test="boParent!=null and boParent gt 0">
				,#{boParent, jdbcType=NUMERIC } 
			</if>
			)
	</insert>
	
	<update id="updateBoard" parameterType="FreeBoardVO">
		UPDATE FREEBOARD
   		SET
		BO_TITLE= #{boTitle, jdbcType=VARCHAR },
		BO_WRITER= #{boWriter, jdbcType=VARCHAR },
		BO_MAIL= #{boMail, jdbcType=VARCHAR },
		BO_CONTENT= #{boContent, jdbcType=CLOB }
		WHERE BO_NO = #{boNo} 
	</update>
	
	<delete id="deleteBoard" parameterType="int">
		MERGE INTO FREEBOARD C
		USING(
		    SELECT BO_NO, (
		        SELECT COUNT(*)
		        FROM FREEBOARD A
		        WHERE A.BO_PARENT = B.BO_NO
		    )CNT
		    FROM FREEBOARD B
		)D 
		ON (D.BO_NO = #{boNo} AND C.BO_NO = D.BO_NO)
		WHEN MATCHED THEN
		UPDATE 
		SET BO_TITLE = '삭제된 글'
		DELETE 
		WHERE D.CNT = 0
 	</delete>
</mapper>

